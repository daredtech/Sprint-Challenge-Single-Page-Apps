{"ast":null,"code":"import _slicedToArray from \"/Users/red/Desktop/lambda/projects/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/red/Desktop/lambda/projects/Sprint-Challenge-Single-Page-Apps/src/components/EpisodesList.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport EpisodeCard from './EpisodeCard';\nexport default function EpisodesList() {\n  // to track data from useEffect\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        episodes = _useState2[0],\n        setEpisodes = _useState2[1];\n\n  useEffect(() => {\n    // to send the request\n    const getEpisodes = () => {\n      axios.get('https://rickandmortyapi.com/api/episode/') // if request was successful \n      .then(response => {\n        console.log('The response data: ', response.data.results); //to assign the received data to episodes\n\n        setEpisodes(response.data.results);\n      }) // if request wasn't successful\n      .catch(error => {\n        console.log('Can\\'t get episodes data');\n      });\n    };\n\n    getEpisodes();\n  }, []);\n  return React.createElement(\"section\", {\n    className: \"episodes-list grid-view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, episodes.map((episode, key) => // console.log(episode);\n  React.createElement(EpisodeCard, {\n    key: key,\n    name: episode.name,\n    iardate: episode.air_date,\n    episode: episode.episode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/red/Desktop/lambda/projects/Sprint-Challenge-Single-Page-Apps/src/components/EpisodesList.js"],"names":["React","useEffect","useState","axios","EpisodeCard","EpisodesList","episodes","setEpisodes","getEpisodes","get","then","response","console","log","data","results","catch","error","map","episode","key","name","air_date"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,SAASC,YAAT,GAAwB;AACnC;AADmC,oBAEHH,QAAQ,CAAC,EAAD,CAFL;AAAA;AAAA,QAE5BI,QAF4B;AAAA,QAElBC,WAFkB;;AAInCN,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMO,WAAW,GAAG,MAAM;AACxBL,MAAAA,KAAK,CACJM,GADD,CACK,0CADL,EAEA;AAFA,OAGCC,IAHD,CAGMC,QAAQ,IAAG;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,QAAQ,CAACG,IAAT,CAAcC,OAAjD,EADe,CAEf;;AACAR,QAAAA,WAAW,CAACI,QAAQ,CAACG,IAAT,CAAcC,OAAf,CAAX;AACD,OAPD,EAQA;AARA,OASCC,KATD,CASOC,KAAK,IAAG;AACbL,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,OAXD;AAYD,KAbD;;AAcAL,IAAAA,WAAW;AACZ,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,SAAO;AAAS,IAAA,SAAS,EAAC,yBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEJF,QAAQ,CAACY,GAAT,CAAa,CAACC,OAAD,EAAUC,GAAV,KACZ;AACA,sBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,GAAlB;AAAuB,IAAA,IAAI,EAAED,OAAO,CAACE,IAArC;AAA2C,IAAA,OAAO,EAAEF,OAAO,CAACG,QAA5D;AAAsE,IAAA,OAAO,EAAEH,OAAO,CAACA,OAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CAFI,CAAP;AASD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport EpisodeCard from './EpisodeCard'\n\nexport default function EpisodesList() {\n    // to track data from useEffect\n    const [episodes, setEpisodes] = useState([]);\n  \n    useEffect(() => {\n      // to send the request\n      const getEpisodes = () => {\n        axios\n        .get('https://rickandmortyapi.com/api/episode/')\n        // if request was successful \n        .then(response =>{\n          console.log('The response data: ', response.data.results);\n          //to assign the received data to episodes\n          setEpisodes(response.data.results);\n        })\n        // if request wasn't successful\n        .catch(error =>{\n          console.log('Can\\'t get episodes data');\n        })\n      }\n      getEpisodes();\n    }, [])\n  \n    return <section className='episodes-list grid-view'>\n      {/* to go over array and display each episode */}\n      {episodes.map((episode, key) => \n        // console.log(episode);\n        <EpisodeCard key={key} name={episode.name} iardate={episode.air_date} episode={episode.episode}/>\n\n      )}\n      </section>\n  \n  }\n  "]},"metadata":{},"sourceType":"module"}