{"ast":null,"code":"import _slicedToArray from \"/Users/red/Desktop/lambda/projects/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/red/Desktop/lambda/projects/Sprint-Challenge-Single-Page-Apps/src/components/CharacterList.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nexport default function CharacterList() {\n  // to track data from useEffect\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        characters = _useState2[0],\n        setCharacters = _useState2[1];\n\n  useEffect(() => {\n    // to send the request\n    const getCharacters = () => {\n      axios.get('https://rickandmortyapi.com/api/character/') // if request was successful \n      .then(response => {\n        console.log('The response data: ', response.data.results); //to assign the received data to characters\n      }) // if request wasn't successful\n      .catch(erroe => {\n        console.log('Can\\'t get characters data');\n      });\n    };\n\n    getCharacters();\n  }, []);\n  return React.createElement(\"section\", {\n    className: \"character-list grid-view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"TODO: `array.map()` over your state here!\"));\n}","map":{"version":3,"sources":["/Users/red/Desktop/lambda/projects/Sprint-Challenge-Single-Page-Apps/src/components/CharacterList.js"],"names":["React","useEffect","useState","axios","CharacterList","characters","setCharacters","getCharacters","get","then","response","console","log","data","results","catch","erroe"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC;AADsC,oBAEFF,QAAQ,CAAC,EAAD,CAFN;AAAA;AAAA,QAE/BG,UAF+B;AAAA,QAEnBC,aAFmB;;AAItCL,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMM,aAAa,GAAG,MAAM;AAC1BJ,MAAAA,KAAK,CACJK,GADD,CACK,4CADL,EAEA;AAFA,OAGCC,IAHD,CAGMC,QAAQ,IAAG;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,QAAQ,CAACG,IAAT,CAAcC,OAAhD,EADe,CAEf;AAED,OAPD,EAQA;AARA,OASCC,KATD,CASOC,KAAK,IAAG;AACbL,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,OAXD;AAYD,KAbD;;AAcAL,IAAAA,aAAa;AACd,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,SAAO;AAAS,IAAA,SAAS,EAAC,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFG,CAAP;AAKD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function CharacterList() {\n  // to track data from useEffect\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    // to send the request\n    const getCharacters = () => {\n      axios\n      .get('https://rickandmortyapi.com/api/character/')\n      // if request was successful \n      .then(response =>{\n        console.log('The response data: ',response.data.results);\n        //to assign the received data to characters\n        \n      })\n      // if request wasn't successful\n      .catch(erroe =>{\n        console.log('Can\\'t get characters data');\n      })\n    }\n    getCharacters();\n  }, [])\n\n  return <section className='character-list grid-view'>\n\n      <h2>TODO: `array.map()` over your state here!</h2>\n    </section>\n\n}\n"]},"metadata":{},"sourceType":"module"}