{"ast":null,"code":"import _slicedToArray from \"/Users/red/Desktop/lambda/projects/Sprint-Challenge-Single-Page-Apps/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/red/Desktop/lambda/projects/Sprint-Challenge-Single-Page-Apps/src/components/LocationsList.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nexport default function LocationsList() {\n  // to track data from useEffect\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        locations = _useState2[0],\n        setLocations = _useState2[1];\n\n  useEffect(() => {\n    // to send the request\n    const getLocations = () => {\n      axios.get('https://rickandmortyapi.com/api/location/') // if request was successful \n      .then(response => {\n        console.log('The response data: ', response.data.results); //to assign the received data to locations\n\n        setLocations(response.data.results);\n      }) // if request wasn't successful\n      .catch(erroe => {\n        console.log('Can\\'t get locations data');\n      });\n    };\n\n    getLocations();\n  }, []);\n  return React.createElement(\"section\", {\n    className: \"location-list grid-view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, locations.map(location => {\n    console.log(location);\n  }));\n}","map":{"version":3,"sources":["/Users/red/Desktop/lambda/projects/Sprint-Challenge-Single-Page-Apps/src/components/LocationsList.js"],"names":["React","useEffect","useState","axios","LocationsList","locations","setLocations","getLocations","get","then","response","console","log","data","results","catch","erroe","map","location"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,aAAT,GAAyB;AACpC;AADoC,oBAEFF,QAAQ,CAAC,EAAD,CAFN;AAAA;AAAA,QAE7BG,SAF6B;AAAA,QAElBC,YAFkB;;AAIpCL,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMM,YAAY,GAAG,MAAM;AACzBJ,MAAAA,KAAK,CACJK,GADD,CACK,2CADL,EAEA;AAFA,OAGCC,IAHD,CAGMC,QAAQ,IAAG;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,QAAQ,CAACG,IAAT,CAAcC,OAAjD,EADe,CAEf;;AACAR,QAAAA,YAAY,CAACI,QAAQ,CAACG,IAAT,CAAcC,OAAf,CAAZ;AACD,OAPD,EAQA;AARA,OASCC,KATD,CASOC,KAAK,IAAG;AACbL,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,OAXD;AAYD,KAbD;;AAcAL,IAAAA,YAAY;AACb,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,SAAO;AAAS,IAAA,SAAS,EAAC,yBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEJF,SAAS,CAACY,GAAV,CAAcC,QAAQ,IAAI;AACzBP,IAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACD,GAFA,CAFI,CAAP;AAOD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function LocationsList() {\n    // to track data from useEffect\n    const [locations, setLocations] = useState([]);\n  \n    useEffect(() => {\n      // to send the request\n      const getLocations = () => {\n        axios\n        .get('https://rickandmortyapi.com/api/location/')\n        // if request was successful \n        .then(response =>{\n          console.log('The response data: ', response.data.results);\n          //to assign the received data to locations\n          setLocations(response.data.results);\n        })\n        // if request wasn't successful\n        .catch(erroe =>{\n          console.log('Can\\'t get locations data');\n        })\n      }\n      getLocations();\n    }, [])\n  \n    return <section className='location-list grid-view'>\n      {/* to go over array and display each location */}\n      {locations.map(location => {\n        console.log(location);\n      })}\n      </section>\n  \n  }\n  "]},"metadata":{},"sourceType":"module"}